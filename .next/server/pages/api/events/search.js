"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/events/search";
exports.ids = ["pages/api/events/search"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("dotenv");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("puppeteer");

/***/ }),

/***/ "puppeteer-extra":
/*!**********************************!*\
  !*** external "puppeteer-extra" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("puppeteer-extra");

/***/ }),

/***/ "puppeteer-extra-plugin-stealth":
/*!*************************************************!*\
  !*** external "puppeteer-extra-plugin-stealth" ***!
  \*************************************************/
/***/ ((module) => {

module.exports = require("puppeteer-extra-plugin-stealth");

/***/ }),

/***/ "(api)/__barrel_optimize__?names=parse!=!./node_modules/date-fns/index.js":
/*!**************************************************************************!*\
  !*** __barrel_optimize__?names=parse!=!./node_modules/date-fns/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   parse: () => (/* reexport safe */ C_Users_cityz_IllI_play_tooket_node_modules_date_fns_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)
/* harmony export */ });
/* harmony import */ var C_Users_cityz_IllI_play_tooket_node_modules_date_fns_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/date-fns/parse.js */ "(api)/./node_modules/date-fns/parse.js");



/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fevents%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cevents%5Csearch.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fevents%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cevents%5Csearch.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_events_search_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\events\\search.ts */ \"(api)/./pages/api/events/search.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_events_search_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_events_search_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/events/search\",\n        pathname: \"/api/events/search\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_events_search_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmV2ZW50cyUyRnNlYXJjaCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDZXZlbnRzJTVDc2VhcmNoLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQzREO0FBQzVEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlja2V0LXNlYXJjaGVyLz8zYmI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcZXZlbnRzXFxcXHNlYXJjaC50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2V2ZW50cy9zZWFyY2hcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9ldmVudHMvc2VhcmNoXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fevents%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cevents%5Csearch.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/services/search-service.ts":
/*!****************************************!*\
  !*** ./lib/services/search-service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SearchService: () => (/* binding */ SearchService),\n/* harmony export */   searchService: () => (/* binding */ searchService)\n/* harmony export */ });\n/* harmony import */ var _src_stub_hub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/src/stub-hub */ \"(api)/./src/stub-hub.js\");\n/* harmony import */ var _src_vivid_seats__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/vivid-seats */ \"(api)/./src/vivid-seats.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _src_config_env__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/src/config/env */ \"(api)/./src/config/env.ts\");\n\n\n\n\nclass SearchService {\n    constructor(){\n        this.supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_2__.createClient)(_src_config_env__WEBPACK_IMPORTED_MODULE_3__.config.supabase.url, _src_config_env__WEBPACK_IMPORTED_MODULE_3__.config.supabase.serviceKey);\n        this.stubHubSearcher = new _src_stub_hub__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        this.vividSeatsSearcher = new _src_vivid_seats__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    }\n    async searchAll(params) {\n        try {\n            const searches = [];\n            if (params.source === \"all\" || params.source === \"stubhub\") {\n                searches.push(this.searchStubHub(params));\n            }\n            if (params.source === \"all\" || params.source === \"vividseats\") {\n                searches.push(this.searchVividSeats(params));\n            }\n            const results = await Promise.all(searches);\n            const combinedResults = results.flat();\n            return {\n                success: true,\n                data: combinedResults,\n                metadata: {\n                    total: combinedResults.length,\n                    sources: {\n                        stubhub: results[0]?.length || 0,\n                        vividseats: results[1]?.length || 0\n                    }\n                }\n            };\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            return {\n                success: false,\n                error: \"Failed to perform search\",\n                metadata: {\n                    error: error instanceof Error ? error.message : \"Unknown error\"\n                }\n            };\n        }\n    }\n    async searchStubHub(params) {\n        return this.stubHubSearcher.searchConcerts(params.artist || params.keyword || \"\", params.venue || \"\", params.location || \"\");\n    }\n    async searchVividSeats(params) {\n        return this.vividSeatsSearcher.searchConcerts(params.artist || params.keyword || \"\", params.venue || \"\", params.location || \"\");\n    }\n}\nconst searchService = new SearchService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvc2VydmljZXMvc2VhcmNoLXNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUE2QztBQUNNO0FBQ0U7QUFDWDtBQUduQyxNQUFNSTtJQUtYQyxhQUFjO1FBQ1osSUFBSSxDQUFDQyxRQUFRLEdBQUdKLG1FQUFZQSxDQUMxQkMsbURBQU1BLENBQUNHLFFBQVEsQ0FBQ0MsR0FBRyxFQUNuQkosbURBQU1BLENBQUNHLFFBQVEsQ0FBQ0UsVUFBVTtRQUU1QixJQUFJLENBQUNDLGVBQWUsR0FBRyxJQUFJVCxxREFBZUE7UUFDMUMsSUFBSSxDQUFDVSxrQkFBa0IsR0FBRyxJQUFJVCx3REFBa0JBO0lBQ2xEO0lBRUEsTUFBTVUsVUFBVUMsTUFBb0IsRUFBeUI7UUFDM0QsSUFBSTtZQUNGLE1BQU1DLFdBQVcsRUFBRTtZQUVuQixJQUFJRCxPQUFPRSxNQUFNLEtBQUssU0FBU0YsT0FBT0UsTUFBTSxLQUFLLFdBQVc7Z0JBQzFERCxTQUFTRSxJQUFJLENBQUMsSUFBSSxDQUFDQyxhQUFhLENBQUNKO1lBQ25DO1lBRUEsSUFBSUEsT0FBT0UsTUFBTSxLQUFLLFNBQVNGLE9BQU9FLE1BQU0sS0FBSyxjQUFjO2dCQUM3REQsU0FBU0UsSUFBSSxDQUFDLElBQUksQ0FBQ0UsZ0JBQWdCLENBQUNMO1lBQ3RDO1lBRUEsTUFBTU0sVUFBVSxNQUFNQyxRQUFRQyxHQUFHLENBQUNQO1lBQ2xDLE1BQU1RLGtCQUFrQkgsUUFBUUksSUFBSTtZQUVwQyxPQUFPO2dCQUNMQyxTQUFTO2dCQUNUQyxNQUFNSDtnQkFDTkksVUFBVTtvQkFDUkMsT0FBT0wsZ0JBQWdCTSxNQUFNO29CQUM3QkMsU0FBUzt3QkFDUEMsU0FBU1gsT0FBTyxDQUFDLEVBQUUsRUFBRVMsVUFBVTt3QkFDL0JHLFlBQVlaLE9BQU8sQ0FBQyxFQUFFLEVBQUVTLFVBQVU7b0JBQ3BDO2dCQUNGO1lBQ0Y7UUFDRixFQUFFLE9BQU9JLE9BQU87WUFDZEMsUUFBUUQsS0FBSyxDQUFDLGlCQUFpQkE7WUFDL0IsT0FBTztnQkFDTFIsU0FBUztnQkFDVFEsT0FBTztnQkFDUE4sVUFBVTtvQkFDUk0sT0FBT0EsaUJBQWlCRSxRQUFRRixNQUFNRyxPQUFPLEdBQUc7Z0JBQ2xEO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsTUFBY2xCLGNBQWNKLE1BQW9CLEVBQW9CO1FBQ2xFLE9BQU8sSUFBSSxDQUFDSCxlQUFlLENBQUMwQixjQUFjLENBQ3hDdkIsT0FBT3dCLE1BQU0sSUFBSXhCLE9BQU95QixPQUFPLElBQUksSUFDbkN6QixPQUFPMEIsS0FBSyxJQUFJLElBQ2hCMUIsT0FBTzJCLFFBQVEsSUFBSTtJQUV2QjtJQUVBLE1BQWN0QixpQkFBaUJMLE1BQW9CLEVBQW9CO1FBQ3JFLE9BQU8sSUFBSSxDQUFDRixrQkFBa0IsQ0FBQ3lCLGNBQWMsQ0FDM0N2QixPQUFPd0IsTUFBTSxJQUFJeEIsT0FBT3lCLE9BQU8sSUFBSSxJQUNuQ3pCLE9BQU8wQixLQUFLLElBQUksSUFDaEIxQixPQUFPMkIsUUFBUSxJQUFJO0lBRXZCO0FBQ0Y7QUFFTyxNQUFNQyxnQkFBZ0IsSUFBSXBDLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RpY2tldC1zZWFyY2hlci8uL2xpYi9zZXJ2aWNlcy9zZWFyY2gtc2VydmljZS50cz9hMDQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHViSHViU2VhcmNoZXIgZnJvbSAnQC9zcmMvc3R1Yi1odWInO1xyXG5pbXBvcnQgVml2aWRTZWF0c1NlYXJjaGVyIGZyb20gJ0Avc3JjL3ZpdmlkLXNlYXRzJztcclxuaW1wb3J0IHsgY3JlYXRlQ2xpZW50IH0gZnJvbSAnQHN1cGFiYXNlL3N1cGFiYXNlLWpzJztcclxuaW1wb3J0IHsgY29uZmlnIH0gZnJvbSAnQC9zcmMvY29uZmlnL2Vudic7XHJcbmltcG9ydCB0eXBlIHsgU2VhcmNoUGFyYW1zLCBTZWFyY2hSZXN1bHQsIEV2ZW50IH0gZnJvbSAnLi4vdHlwZXMvYXBpJztcclxuXHJcbmV4cG9ydCBjbGFzcyBTZWFyY2hTZXJ2aWNlIHtcclxuICBwcml2YXRlIHN1cGFiYXNlO1xyXG4gIHByaXZhdGUgc3R1Ykh1YlNlYXJjaGVyOiBTdHViSHViU2VhcmNoZXI7XHJcbiAgcHJpdmF0ZSB2aXZpZFNlYXRzU2VhcmNoZXI6IFZpdmlkU2VhdHNTZWFyY2hlcjtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICB0aGlzLnN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxyXG4gICAgICBjb25maWcuc3VwYWJhc2UudXJsLFxyXG4gICAgICBjb25maWcuc3VwYWJhc2Uuc2VydmljZUtleVxyXG4gICAgKTtcclxuICAgIHRoaXMuc3R1Ykh1YlNlYXJjaGVyID0gbmV3IFN0dWJIdWJTZWFyY2hlcigpO1xyXG4gICAgdGhpcy52aXZpZFNlYXRzU2VhcmNoZXIgPSBuZXcgVml2aWRTZWF0c1NlYXJjaGVyKCk7XHJcbiAgfVxyXG5cclxuICBhc3luYyBzZWFyY2hBbGwocGFyYW1zOiBTZWFyY2hQYXJhbXMpOiBQcm9taXNlPFNlYXJjaFJlc3VsdD4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3Qgc2VhcmNoZXMgPSBbXTtcclxuICAgICAgXHJcbiAgICAgIGlmIChwYXJhbXMuc291cmNlID09PSAnYWxsJyB8fCBwYXJhbXMuc291cmNlID09PSAnc3R1Ymh1YicpIHtcclxuICAgICAgICBzZWFyY2hlcy5wdXNoKHRoaXMuc2VhcmNoU3R1Ykh1YihwYXJhbXMpKTtcclxuICAgICAgfVxyXG4gICAgICBcclxuICAgICAgaWYgKHBhcmFtcy5zb3VyY2UgPT09ICdhbGwnIHx8IHBhcmFtcy5zb3VyY2UgPT09ICd2aXZpZHNlYXRzJykge1xyXG4gICAgICAgIHNlYXJjaGVzLnB1c2godGhpcy5zZWFyY2hWaXZpZFNlYXRzKHBhcmFtcykpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGwoc2VhcmNoZXMpO1xyXG4gICAgICBjb25zdCBjb21iaW5lZFJlc3VsdHMgPSByZXN1bHRzLmZsYXQoKTtcclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICBkYXRhOiBjb21iaW5lZFJlc3VsdHMsXHJcbiAgICAgICAgbWV0YWRhdGE6IHtcclxuICAgICAgICAgIHRvdGFsOiBjb21iaW5lZFJlc3VsdHMubGVuZ3RoLFxyXG4gICAgICAgICAgc291cmNlczoge1xyXG4gICAgICAgICAgICBzdHViaHViOiByZXN1bHRzWzBdPy5sZW5ndGggfHwgMCxcclxuICAgICAgICAgICAgdml2aWRzZWF0czogcmVzdWx0c1sxXT8ubGVuZ3RoIHx8IDBcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdTZWFyY2ggZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgIGVycm9yOiAnRmFpbGVkIHRvIHBlcmZvcm0gc2VhcmNoJyxcclxuICAgICAgICBtZXRhZGF0YToge1xyXG4gICAgICAgICAgZXJyb3I6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InXHJcbiAgICAgICAgfVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBzZWFyY2hTdHViSHViKHBhcmFtczogU2VhcmNoUGFyYW1zKTogUHJvbWlzZTxFdmVudFtdPiB7XHJcbiAgICByZXR1cm4gdGhpcy5zdHViSHViU2VhcmNoZXIuc2VhcmNoQ29uY2VydHMoXHJcbiAgICAgIHBhcmFtcy5hcnRpc3QgfHwgcGFyYW1zLmtleXdvcmQgfHwgJycsXHJcbiAgICAgIHBhcmFtcy52ZW51ZSB8fCAnJyxcclxuICAgICAgcGFyYW1zLmxvY2F0aW9uIHx8ICcnXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBzZWFyY2hWaXZpZFNlYXRzKHBhcmFtczogU2VhcmNoUGFyYW1zKTogUHJvbWlzZTxFdmVudFtdPiB7XHJcbiAgICByZXR1cm4gdGhpcy52aXZpZFNlYXRzU2VhcmNoZXIuc2VhcmNoQ29uY2VydHMoXHJcbiAgICAgIHBhcmFtcy5hcnRpc3QgfHwgcGFyYW1zLmtleXdvcmQgfHwgJycsXHJcbiAgICAgIHBhcmFtcy52ZW51ZSB8fCAnJyxcclxuICAgICAgcGFyYW1zLmxvY2F0aW9uIHx8ICcnXHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHNlYXJjaFNlcnZpY2UgPSBuZXcgU2VhcmNoU2VydmljZSgpOyAiXSwibmFtZXMiOlsiU3R1Ykh1YlNlYXJjaGVyIiwiVml2aWRTZWF0c1NlYXJjaGVyIiwiY3JlYXRlQ2xpZW50IiwiY29uZmlnIiwiU2VhcmNoU2VydmljZSIsImNvbnN0cnVjdG9yIiwic3VwYWJhc2UiLCJ1cmwiLCJzZXJ2aWNlS2V5Iiwic3R1Ykh1YlNlYXJjaGVyIiwidml2aWRTZWF0c1NlYXJjaGVyIiwic2VhcmNoQWxsIiwicGFyYW1zIiwic2VhcmNoZXMiLCJzb3VyY2UiLCJwdXNoIiwic2VhcmNoU3R1Ykh1YiIsInNlYXJjaFZpdmlkU2VhdHMiLCJyZXN1bHRzIiwiUHJvbWlzZSIsImFsbCIsImNvbWJpbmVkUmVzdWx0cyIsImZsYXQiLCJzdWNjZXNzIiwiZGF0YSIsIm1ldGFkYXRhIiwidG90YWwiLCJsZW5ndGgiLCJzb3VyY2VzIiwic3R1Ymh1YiIsInZpdmlkc2VhdHMiLCJlcnJvciIsImNvbnNvbGUiLCJFcnJvciIsIm1lc3NhZ2UiLCJzZWFyY2hDb25jZXJ0cyIsImFydGlzdCIsImtleXdvcmQiLCJ2ZW51ZSIsImxvY2F0aW9uIiwic2VhcmNoU2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/services/search-service.ts\n");

/***/ }),

/***/ "(api)/./lib/utils/logger.ts":
/*!*****************************!*\
  !*** ./lib/utils/logger.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\nconst logger = {\n    info: (message, data)=>{\n        console.log(`[INFO] ${message}`, data || \"\");\n    },\n    error: (message, error)=>{\n        console.error(`[ERROR] ${message}`, error || \"\");\n    },\n    debug: (message, data)=>{\n        if (true) {\n            console.log(`[DEBUG] ${message}`, data || \"\");\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvdXRpbHMvbG9nZ2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxTQUFTO0lBQ3BCQyxNQUFNLENBQUNDLFNBQWlCQztRQUN0QkMsUUFBUUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFSCxRQUFRLENBQUMsRUFBRUMsUUFBUTtJQUMzQztJQUNBRyxPQUFPLENBQUNKLFNBQWlCSTtRQUN2QkYsUUFBUUUsS0FBSyxDQUFDLENBQUMsUUFBUSxFQUFFSixRQUFRLENBQUMsRUFBRUksU0FBUztJQUMvQztJQUNBQyxPQUFPLENBQUNMLFNBQWlCQztRQUN2QixJQUFJSyxJQUF5QixFQUFlO1lBQzFDSixRQUFRQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUVILFFBQVEsQ0FBQyxFQUFFQyxRQUFRO1FBQzVDO0lBQ0Y7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlja2V0LXNlYXJjaGVyLy4vbGliL3V0aWxzL2xvZ2dlci50cz83NTY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBsb2dnZXIgPSB7XHJcbiAgaW5mbzogKG1lc3NhZ2U6IHN0cmluZywgZGF0YT86IGFueSkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coYFtJTkZPXSAke21lc3NhZ2V9YCwgZGF0YSB8fCAnJyk7XHJcbiAgfSxcclxuICBlcnJvcjogKG1lc3NhZ2U6IHN0cmluZywgZXJyb3I/OiBhbnkpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoYFtFUlJPUl0gJHttZXNzYWdlfWAsIGVycm9yIHx8ICcnKTtcclxuICB9LFxyXG4gIGRlYnVnOiAobWVzc2FnZTogc3RyaW5nLCBkYXRhPzogYW55KSA9PiB7XHJcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcclxuICAgICAgY29uc29sZS5sb2coYFtERUJVR10gJHttZXNzYWdlfWAsIGRhdGEgfHwgJycpO1xyXG4gICAgfVxyXG4gIH1cclxufTsgIl0sIm5hbWVzIjpbImxvZ2dlciIsImluZm8iLCJtZXNzYWdlIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImRlYnVnIiwicHJvY2VzcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./lib/utils/logger.ts\n");

/***/ }),

/***/ "(api)/./pages/api/events/search.ts":
/*!************************************!*\
  !*** ./pages/api/events/search.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_services_search_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/services/search-service */ \"(api)/./lib/services/search-service.ts\");\n/* harmony import */ var _lib_utils_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/utils/logger */ \"(api)/./lib/utils/logger.ts\");\n\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            success: false,\n            error: \"Method not allowed\",\n            metadata: {}\n        });\n    }\n    try {\n        const params = req.body;\n        _lib_utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.info(\"Search request received\", params);\n        // Run both searches in parallel\n        const result = await _lib_services_search_service__WEBPACK_IMPORTED_MODULE_0__.searchService.searchAll({\n            ...params,\n            source: \"all\" // This will trigger both StubHub and VividSeats searches\n        });\n        return res.status(result.success ? 200 : 500).json(result);\n    } catch (error) {\n        _lib_utils_logger__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"API error:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Internal server error\",\n            metadata: {\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZXZlbnRzL3NlYXJjaC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDOEQ7QUFFbEI7QUFFN0IsZUFBZUUsUUFDNUJDLEdBQW1CLEVBQ25CQyxHQUFrQztJQUVsQyxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQzFCQyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsVUFBVSxDQUFDO1FBQ2I7SUFDRjtJQUVBLElBQUk7UUFDRixNQUFNQyxTQUFTUixJQUFJUyxJQUFJO1FBQ3ZCWCxxREFBTUEsQ0FBQ1ksSUFBSSxDQUFDLDJCQUEyQkY7UUFFdkMsZ0NBQWdDO1FBQ2hDLE1BQU1HLFNBQVMsTUFBTWQsdUVBQWFBLENBQUNlLFNBQVMsQ0FBQztZQUMzQyxHQUFHSixNQUFNO1lBQ1RLLFFBQVEsTUFBTyx5REFBeUQ7UUFDMUU7UUFFQSxPQUFPWixJQUFJRSxNQUFNLENBQUNRLE9BQU9OLE9BQU8sR0FBRyxNQUFNLEtBQUtELElBQUksQ0FBQ087SUFDckQsRUFBRSxPQUFPTCxPQUFPO1FBQ2RSLHFEQUFNQSxDQUFDUSxLQUFLLENBQUMsY0FBY0E7UUFDM0IsT0FBT0wsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUMxQkMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFVBQVU7Z0JBQ1JELE9BQU9BLGlCQUFpQlEsUUFBUVIsTUFBTVMsT0FBTyxHQUFHO1lBQ2xEO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlja2V0LXNlYXJjaGVyLy4vcGFnZXMvYXBpL2V2ZW50cy9zZWFyY2gudHM/YWViYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IHNlYXJjaFNlcnZpY2UgfSBmcm9tICdAL2xpYi9zZXJ2aWNlcy9zZWFyY2gtc2VydmljZSc7XHJcbmltcG9ydCB0eXBlIHsgU2VhcmNoUGFyYW1zLCBTZWFyY2hSZXN1bHQgfSBmcm9tICdAL2xpYi90eXBlcy9hcGknO1xyXG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAL2xpYi91dGlscy9sb2dnZXInO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcclxuICByZXE6IE5leHRBcGlSZXF1ZXN0LFxyXG4gIHJlczogTmV4dEFwaVJlc3BvbnNlPFNlYXJjaFJlc3VsdD5cclxuKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyxcclxuICAgICAgbWV0YWRhdGE6IHt9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSByZXEuYm9keSBhcyBTZWFyY2hQYXJhbXM7XHJcbiAgICBsb2dnZXIuaW5mbygnU2VhcmNoIHJlcXVlc3QgcmVjZWl2ZWQnLCBwYXJhbXMpO1xyXG5cclxuICAgIC8vIFJ1biBib3RoIHNlYXJjaGVzIGluIHBhcmFsbGVsXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzZWFyY2hTZXJ2aWNlLnNlYXJjaEFsbCh7XHJcbiAgICAgIC4uLnBhcmFtcyxcclxuICAgICAgc291cmNlOiAnYWxsJyAgLy8gVGhpcyB3aWxsIHRyaWdnZXIgYm90aCBTdHViSHViIGFuZCBWaXZpZFNlYXRzIHNlYXJjaGVzXHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyhyZXN1bHQuc3VjY2VzcyA/IDIwMCA6IDUwMCkuanNvbihyZXN1bHQpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBsb2dnZXIuZXJyb3IoJ0FQSSBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InLFxyXG4gICAgICBtZXRhZGF0YToge1xyXG4gICAgICAgIGVycm9yOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdVbmtub3duIGVycm9yJ1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn0gIl0sIm5hbWVzIjpbInNlYXJjaFNlcnZpY2UiLCJsb2dnZXIiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJlcnJvciIsIm1ldGFkYXRhIiwicGFyYW1zIiwiYm9keSIsImluZm8iLCJyZXN1bHQiLCJzZWFyY2hBbGwiLCJzb3VyY2UiLCJFcnJvciIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./pages/api/events/search.ts\n");

/***/ }),

/***/ "(api)/./src/config/env.ts":
/*!***************************!*\
  !*** ./src/config/env.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dotenv */ \"dotenv\");\n/* harmony import */ var dotenv__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dotenv__WEBPACK_IMPORTED_MODULE_0__);\n\n// Load environment variables\ndotenv__WEBPACK_IMPORTED_MODULE_0___default().config();\nconst config = {\n    supabase: {\n        url: \"https://rkctqjbksmszuhrocxxm.supabase.co\",\n        serviceKey: process.env.SUPABASE_SERVICE_KEY,\n        anonKey: process.env.SUPABASE_KEY\n    },\n    environment: \"development\" || 0\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvY29uZmlnL2Vudi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFNUIsNkJBQTZCO0FBQzdCQSxvREFBYTtBQUVOLE1BQU1DLFNBQVM7SUFDcEJDLFVBQVU7UUFDUkMsS0FBS0MsMENBQW9DO1FBQ3pDRyxZQUFZSCxRQUFRQyxHQUFHLENBQUNHLG9CQUFvQjtRQUM1Q0MsU0FBU0wsUUFBUUMsR0FBRyxDQUFDSyxZQUFZO0lBQ25DO0lBQ0FDLGFBQWFQLGlCQUF3QjtBQUN2QyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlja2V0LXNlYXJjaGVyLy4vc3JjL2NvbmZpZy9lbnYudHM/NWFmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XHJcblxyXG4vLyBMb2FkIGVudmlyb25tZW50IHZhcmlhYmxlc1xyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIHN1cGFiYXNlOiB7XHJcbiAgICB1cmw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCEsXHJcbiAgICBzZXJ2aWNlS2V5OiBwcm9jZXNzLmVudi5TVVBBQkFTRV9TRVJWSUNFX0tFWSEsXHJcbiAgICBhbm9uS2V5OiBwcm9jZXNzLmVudi5TVVBBQkFTRV9LRVkhXHJcbiAgfSxcclxuICBlbnZpcm9ubWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgfHwgJ2RldmVsb3BtZW50J1xyXG59OyAiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwic3VwYWJhc2UiLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic2VydmljZUtleSIsIlNVUEFCQVNFX1NFUlZJQ0VfS0VZIiwiYW5vbktleSIsIlNVUEFCQVNFX0tFWSIsImVudmlyb25tZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/config/env.ts\n");

/***/ }),

/***/ "(api)/./src/stub-hub.js":
/*!*************************!*\
  !*** ./src/stub-hub.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_config_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/config/env */ \"(api)/./src/config/env.ts\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(api)/./src/utils.js\");\n\n\n\n\nconst supabaseClient = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(_src_config_env__WEBPACK_IMPORTED_MODULE_1__.config.supabase.url, _src_config_env__WEBPACK_IMPORTED_MODULE_1__.config.supabase.serviceKey);\nclass StubHubSearcher {\n    constructor(){\n        this.baseUrl = \"https://www.stubhub.com/secure/search\";\n    }\n    generateSearchUrl(artist, venue, location) {\n        const searchParams = new URLSearchParams();\n        const searchTerms = [\n            artist,\n            venue,\n            location\n        ].filter(Boolean);\n        searchParams.append(\"q\", searchTerms.join(\" \"));\n        return `${this.baseUrl}?${searchParams.toString()}`;\n    }\n    async setupBrowser() {\n        return await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupBrowser)();\n    }\n    async setupPage(browser) {\n        return await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupPage)(browser);\n    }\n    async getTicketPrices(eventUrl, existingPage = null) {\n        let browser = null;\n        let page = existingPage;\n        try {\n            if (!existingPage) {\n                browser = await this.setupBrowser();\n                page = await this.setupPage(browser);\n                console.log(\"Navigating to event page:\", eventUrl);\n                // Initial navigation\n                await page.goto(eventUrl, {\n                    waitUntil: \"domcontentloaded\",\n                    timeout: 30000\n                });\n            }\n            // Function to check for listings container\n            const checkListingsContainer = async ()=>{\n                console.log(\"Checking for listings container...\");\n                const content = await page.content();\n                return content.includes(\"listings-container\");\n            };\n            // First check\n            let hasListings = await checkListingsContainer();\n            // If not found, try reloading\n            if (!hasListings) {\n                console.log(\"Listings container not found, reloading page...\");\n                try {\n                    await Promise.race([\n                        page.reload({\n                            waitUntil: \"domcontentloaded\"\n                        }),\n                        new Promise((_, reject)=>setTimeout(()=>reject(new Error(\"Reload timeout\")), 10000))\n                    ]);\n                    // Wait a moment for any dynamic content\n                    await page.waitForTimeout(2000);\n                    // Check again after reload\n                    hasListings = await checkListingsContainer();\n                    if (!hasListings) {\n                        console.log(\"Listings container still not found after reload, trying alternative approach...\");\n                        // Try navigating to the URL again\n                        await page.goto(eventUrl, {\n                            waitUntil: \"domcontentloaded\",\n                            timeout: 10000\n                        });\n                        await page.waitForTimeout(2000);\n                        hasListings = await checkListingsContainer();\n                    }\n                } catch (reloadError) {\n                    console.log(\"Reload failed, trying alternative approach...\", reloadError.message);\n                    // If reload times out, try navigating to the URL again\n                    await page.goto(eventUrl, {\n                        waitUntil: \"domcontentloaded\",\n                        timeout: 10000\n                    });\n                    await page.waitForTimeout(2000);\n                    hasListings = await checkListingsContainer();\n                }\n            }\n            // Wait for listings container with multiple selector attempts\n            let listingsFound = false;\n            const selectors = [\n                \"#listings-container\",\n                '[data-testid=\"listings-container\"]',\n                \".listing-container\",\n                '[data-testid=\"event-listings\"]'\n            ];\n            console.log(\"Waiting for listings container to be visible...\");\n            for (const selector of selectors){\n                try {\n                    await page.waitForSelector(selector, {\n                        timeout: 5000,\n                        visible: true\n                    });\n                    console.log(`Found listings container with selector: ${selector}`);\n                    listingsFound = true;\n                    break;\n                } catch (error) {\n                    console.log(`Selector ${selector} not found, trying next...`);\n                }\n            }\n            if (!listingsFound) {\n                console.error(\"Could not find listings container with any known selector\");\n                await page.screenshot({\n                    path: \"listings-error.png\",\n                    fullPage: true\n                });\n                throw new Error(\"Listings container not found after all attempts\");\n            }\n            // Wait for actual ticket listings to load with shorter timeout\n            await page.waitForFunction(()=>{\n                const listings = document.querySelectorAll(\"[data-listing-id]\");\n                return listings.length > 0;\n            }, {\n                timeout: 10000\n            });\n            // Additional delay to ensure all dynamic content is loaded\n            await page.waitForTimeout(1000);\n            const tickets = await page.evaluate(()=>{\n                const listings = Array.from(document.querySelectorAll(\"[data-listing-id]\"));\n                console.log(`Processing ${listings.length} listings`);\n                const ticketsBySection = {};\n                listings.forEach((listing, index)=>{\n                    try {\n                        // Skip sold tickets\n                        if (listing.getAttribute(\"data-is-sold\") === \"1\") return;\n                        // Get section name with multiple selector attempts\n                        const section = listing.querySelector(\".sc-hlalgf-6\")?.textContent?.trim() || listing.querySelector('[data-testid=\"section-name\"]')?.textContent?.trim() || listing.querySelector('[data-auto=\"listing-section\"]')?.textContent?.trim() || \"General Admission\";\n                        // Get price with multiple selector attempts\n                        const priceElement = listing.querySelector('[data-testid=\"listing-price\"]') || listing.querySelector(\".sc-hlalgf-1\") || listing.querySelector('[data-auto=\"listing-price\"]');\n                        const price = priceElement?.textContent?.trim();\n                        // Get quantity with multiple selector attempts\n                        const quantity = listing.querySelector(\".sc-hlalgf-14\")?.textContent?.trim() || listing.querySelector('[data-testid=\"quantity\"]')?.textContent?.trim() || listing.querySelector('[data-auto=\"listing-quantity\"]')?.textContent?.trim();\n                        if (!price) return;\n                        if (!ticketsBySection[section]) {\n                            ticketsBySection[section] = {\n                                section,\n                                tickets: [],\n                                lowestPrice: Infinity,\n                                highestPrice: -Infinity,\n                                numberOfListings: 0\n                            };\n                        }\n                        const numericPrice = parseFloat(price.replace(/[^0-9.]/g, \"\"));\n                        const ticketInfo = {\n                            quantity,\n                            price,\n                            rawPrice: numericPrice,\n                            listingUrl: window.location.href,\n                            listingId: listing.getAttribute(\"data-listing-id\")\n                        };\n                        ticketsBySection[section].tickets.push(ticketInfo);\n                        if (!isNaN(numericPrice)) {\n                            ticketsBySection[section].lowestPrice = Math.min(ticketsBySection[section].lowestPrice, numericPrice);\n                            ticketsBySection[section].highestPrice = Math.max(ticketsBySection[section].highestPrice, numericPrice);\n                            ticketsBySection[section].numberOfListings++;\n                        }\n                    } catch (err) {\n                        console.log(`Error processing listing ${index}:`, err);\n                    }\n                });\n                Object.values(ticketsBySection).forEach((section)=>{\n                    if (section.lowestPrice === Infinity) section.lowestPrice = null;\n                    if (section.highestPrice === -Infinity) section.highestPrice = null;\n                    section.tickets.sort((a, b)=>(a.rawPrice || Infinity) - (b.rawPrice || Infinity));\n                });\n                return {\n                    totalSections: Object.keys(ticketsBySection).length,\n                    sections: Object.values(ticketsBySection)\n                };\n            });\n            console.log(`Found tickets in ${tickets.totalSections} sections`);\n            return tickets;\n        } catch (error) {\n            console.error(\"Error fetching ticket prices:\", error);\n            if (page) {\n                await page.screenshot({\n                    path: \"error-state.png\",\n                    fullPage: true\n                });\n                const content = await page.content();\n                console.log(\"Page content at error:\", content.substring(0, 500) + \"...\");\n            }\n            return {\n                totalSections: 0,\n                sections: []\n            };\n        } finally{\n            if (browser && !existingPage) {\n                await browser.close();\n            }\n        }\n    }\n    async searchConcerts(artist, venue, location) {\n        const browser = await this.setupBrowser();\n        let searchPage;\n        let eventPage;\n        try {\n            searchPage = await this.setupPage(browser);\n            const searchUrl = this.generateSearchUrl(artist, venue, location);\n            console.log(\"Searching StubHub:\", searchUrl);\n            await searchPage.goto(searchUrl, {\n                waitUntil: \"networkidle0\",\n                timeout: 30000\n            });\n            console.log(\"Page loaded, checking content...\");\n            await searchPage.waitForTimeout(2000);\n            let content = await searchPage.content();\n            if (!content.includes('data-testid=\"primaryGrid\"')) {\n                console.log(\"Reloading page due to missing content...\");\n                await searchPage.reload({\n                    waitUntil: \"domcontentloaded\"\n                });\n                await searchPage.waitForTimeout(3000);\n            }\n            console.log(\"Waiting for primary grid...\");\n            await searchPage.waitForSelector('[data-testid=\"primaryGrid\"]');\n            console.log(\"Found primary grid, extracting events...\");\n            await searchPage.waitForTimeout(2000);\n            const events = await this.extractEventDetails(searchPage);\n            console.log(`\\nRaw events extracted: ${events.length}`);\n            const matchingEvents = events.filter((event)=>{\n                console.log(\"Checking event:\", event.name);\n                const titleMatch = !artist || event.name.toLowerCase().includes(artist.toLowerCase());\n                const venueMatch = !venue || event.venue.toLowerCase().includes(venue.toLowerCase());\n                const locationMatch = !location || event.location.toLowerCase().includes(location.toLowerCase());\n                console.log(\"Match results:\", {\n                    titleMatch,\n                    venueMatch,\n                    locationMatch\n                });\n                return titleMatch && venueMatch && locationMatch;\n            });\n            console.log(\"Found matching events:\", matchingEvents.length);\n            const eventsWithTickets = [];\n            for (const event of matchingEvents){\n                const { success, page: newPage } = await this.navigateToEvent(searchPage, event);\n                if (success && newPage) {\n                    eventPage = newPage;\n                    const tickets = await this.getTicketPrices(event.link, eventPage);\n                    console.log(\"Scraped Tickets:\", JSON.stringify(tickets, null, 2));\n                    eventsWithTickets.push({\n                        name: event.name,\n                        date: event.date,\n                        venue: event.venue,\n                        location: event.location,\n                        category: event.category,\n                        link: event.link,\n                        source: event.source,\n                        tickets: tickets\n                    });\n                    await eventPage.close();\n                    await searchPage.waitForTimeout(1000);\n                }\n            }\n            return eventsWithTickets;\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            if (searchPage) {\n                await searchPage.screenshot({\n                    path: \"error.png\",\n                    fullPage: true\n                });\n            }\n            return [];\n        } finally{\n            if (eventPage && !eventPage.isClosed()) await eventPage.close();\n            if (searchPage && !searchPage.isClosed()) await searchPage.close();\n            if (browser) await browser.close();\n        }\n    }\n    // Updated extractEventDetails method\n    async extractEventDetails(page) {\n        console.log(\"Starting event extraction in Node\");\n        const results = await page.evaluate(()=>{\n            const results = {\n                logs: [],\n                events: []\n            };\n            const eventContainer = document.querySelector('[data-testid=\"primaryGrid\"]');\n            results.logs.push(`Found container: ${!!eventContainer}`);\n            if (!eventContainer) {\n                results.logs.push(\"No event container found\");\n                return results;\n            }\n            const listItems = Array.from(eventContainer.querySelectorAll(\"li\")).slice(1);\n            results.logs.push(`Processing ${listItems.length} event items`);\n            listItems.forEach((item, index)=>{\n                try {\n                    const link = item.querySelector(\"a\");\n                    const titleMatch = item.textContent.match(/(?:PM|AM)(.*?)(?:Byline|Shed|Theatre|Arena|Center|Complex|Bar|Bottle)/);\n                    const title = titleMatch?.[1]?.trim() || \"\";\n                    const timeElement = item.querySelector(\"time\");\n                    const dateText = timeElement?.textContent?.trim() || \"\";\n                    // Updated regex to handle year in the middle\n                    const dateMatch = dateText.match(/([A-Za-z]+)\\s+(\\d+)\\s+(\\d{4})([A-Za-z]+)(\\d+:\\d+\\s*[AP]M)/i);\n                    let formattedDate = null;\n                    if (dateMatch) {\n                        const [_, month, day, year, dayOfWeek, time] = dateMatch;\n                        const dateStr = `${month} ${day} ${year} ${time}`;\n                        formattedDate = dateStr;\n                        results.logs.push(`Parsed Date String: ${dateStr}`);\n                    } else {\n                        results.logs.push(`Failed to parse date from text: \"${dateText}\"`);\n                    }\n                    const venueMatch = item.textContent.match(/(?:at\\s)?((?:Byline|Shed|Theatre|Arena|Center|Complex|Bar|Bottle)[^,]+)/);\n                    const venue = venueMatch?.[1]?.trim() || \"\";\n                    const locationMatch = item.textContent.match(/([^,]+,\\s*[A-Z]{2})/);\n                    const location = locationMatch?.[1]?.trim() || \"\";\n                    // Set category\n                    const category = \"Concert\";\n                    if (title && formattedDate && venue && location && link?.href) {\n                        results.events.push({\n                            name: title,\n                            date: formattedDate,\n                            venue,\n                            location,\n                            category,\n                            link: link.href,\n                            source: \"stubhub\"\n                        });\n                        // Add debug logging for successful event\n                        results.logs.push(`Successfully parsed event: ${title} on ${formattedDate}`);\n                    } else {\n                        results.logs.push(`Incomplete data for event ${index + 1}, skipping insertion.`);\n                        results.logs.push(`Title: ${title}`);\n                        results.logs.push(`Date: ${formattedDate}`);\n                        results.logs.push(`Venue: ${venue}`);\n                        results.logs.push(`Location: ${location}`);\n                        results.logs.push(`Has link: ${!!link?.href}`);\n                    }\n                    // Debug logging\n                    results.logs.push(`\\nList Item ${index + 1}:`);\n                    results.logs.push(`Name: ${title}`);\n                    results.logs.push(`Date: ${formattedDate}`);\n                    results.logs.push(`Original Date Text: ${dateText}`);\n                    results.logs.push(`Venue: ${venue}`);\n                    results.logs.push(`Location: ${location}`);\n                    results.logs.push(`Category: ${category}`);\n                    results.logs.push(`Has link: ${!!link?.href}`);\n                } catch (err) {\n                    results.logs.push(`Error processing item ${index + 1}: ${err.message}`);\n                }\n            });\n            return results;\n        });\n        // Log debug information\n        results.logs.forEach((log)=>console.log(log));\n        return results.events;\n    }\n    // navigateToEvent remains unchanged\n    async navigateToEvent(page, event) {\n        try {\n            console.log(\"Attempting to navigate to event:\", event.name);\n            const containerSelector = '[data-testid=\"primaryGrid\"]';\n            await page.waitForSelector(containerSelector);\n            console.log(\"Found event container\");\n            // Get all event links\n            const eventLinks = await page.$$(`${containerSelector} a[href*=\"/event/\"]`);\n            console.log(\"Found event links:\", eventLinks.length);\n            for (const link of eventLinks){\n                const linkContent = await link.evaluate((el)=>{\n                    return {\n                        text: el.textContent.replace(/\\s+/g, \" \").trim(),\n                        href: el.href\n                    };\n                });\n                console.log(\"Checking link:\", linkContent);\n                if (linkContent.text.includes(event.name)) {\n                    console.log(\"Found matching event, clicking link\");\n                    // Create a promise that resolves when a new page is created\n                    const newPagePromise = new Promise((resolve)=>page.browser().once(\"targetcreated\", async (target)=>{\n                            const newPage = await target.page();\n                            resolve(newPage);\n                        }));\n                    // Click the link\n                    await link.click();\n                    // Wait for the new page to open\n                    const newPage = await newPagePromise;\n                    console.log(\"New page opened\");\n                    // Wait for the listings container in the new page\n                    await newPage.waitForSelector(\"#listings-container\", {\n                        timeout: 60000\n                    });\n                    console.log(\"Event page loaded\");\n                    // Return both success status and the new page\n                    return {\n                        success: true,\n                        page: newPage\n                    };\n                }\n            }\n            console.log(`Could not find event with name: ${event.name}`);\n            return {\n                success: false,\n                page: null\n            };\n        } catch (error) {\n            console.error(\"Navigation error:\", error);\n            return {\n                success: false,\n                page: null\n            };\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StubHubSearcher);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/stub-hub.js\n");

/***/ }),

/***/ "(api)/./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatPrice: () => (/* binding */ formatPrice),\n/* harmony export */   setupBrowser: () => (/* binding */ setupBrowser),\n/* harmony export */   setupPage: () => (/* binding */ setupPage)\n/* harmony export */ });\n/* harmony import */ var puppeteer_extra__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer-extra */ \"puppeteer-extra\");\n/* harmony import */ var puppeteer_extra__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(puppeteer_extra__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var puppeteer_extra_plugin_stealth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! puppeteer-extra-plugin-stealth */ \"puppeteer-extra-plugin-stealth\");\n/* harmony import */ var puppeteer_extra_plugin_stealth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(puppeteer_extra_plugin_stealth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(puppeteer__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\npuppeteer_extra__WEBPACK_IMPORTED_MODULE_0___default().use(puppeteer_extra_plugin_stealth__WEBPACK_IMPORTED_MODULE_1___default()());\nasync function setupBrowser() {\n    return await puppeteer_extra__WEBPACK_IMPORTED_MODULE_0___default().launch({\n        headless: false,\n        executablePath: (0,puppeteer__WEBPACK_IMPORTED_MODULE_2__.executablePath)(),\n        args: [\n            \"--no-sandbox\",\n            \"--disable-setuid-sandbox\",\n            \"--disable-blink-features=AutomationControlled\",\n            \"--window-size=1920,1080\",\n            \"--disable-features=site-per-process\",\n            \"--disable-web-security\"\n        ],\n        defaultViewport: {\n            width: 1920,\n            height: 1080\n        }\n    });\n}\nasync function setupPage(browser) {\n    const page = await browser.newPage();\n    await page.setExtraHTTPHeaders({\n        \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8\",\n        \"Accept-Language\": \"en-US,en;q=0.9\",\n        \"Accept-Encoding\": \"gzip, deflate, br\",\n        \"Connection\": \"keep-alive\"\n    });\n    await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\");\n    return page;\n}\nfunction formatPrice(price) {\n    if (typeof price === \"string\") {\n        return parseFloat(price.replace(/[^0-9.]/g, \"\"));\n    }\n    return price;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXdDO0FBQ21CO0FBQ2hCO0FBRTNDQSwwREFBYSxDQUFDQyxxRUFBYUE7QUFFM0IsZUFBZUc7SUFDYixPQUFPLE1BQU1KLDZEQUFnQixDQUFDO1FBQzVCTSxVQUFVO1FBQ1ZKLGdCQUFnQkEseURBQWNBO1FBQzlCSyxNQUFNO1lBQ0o7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFDREMsaUJBQWlCO1lBQUVDLE9BQU87WUFBTUMsUUFBUTtRQUFLO0lBQy9DO0FBQ0Y7QUFFQSxlQUFlQyxVQUFVQyxPQUFPO0lBQzlCLE1BQU1DLE9BQU8sTUFBTUQsUUFBUUUsT0FBTztJQUVsQyxNQUFNRCxLQUFLRSxtQkFBbUIsQ0FBQztRQUM3QixVQUFVO1FBQ1YsbUJBQW1CO1FBQ25CLG1CQUFtQjtRQUNuQixjQUFjO0lBQ2hCO0lBRUEsTUFBTUYsS0FBS0csWUFBWSxDQUFDO0lBRXhCLE9BQU9IO0FBQ1Q7QUFFQSxTQUFTSSxZQUFZQyxLQUFLO0lBQ3hCLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQzdCLE9BQU9DLFdBQVdELE1BQU1FLE9BQU8sQ0FBQyxZQUFZO0lBQzlDO0lBQ0EsT0FBT0Y7QUFDVDtBQU1FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGlja2V0LXNlYXJjaGVyLy4vc3JjL3V0aWxzLmpzPzVkODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHB1cHBldGVlciBmcm9tICdwdXBwZXRlZXItZXh0cmEnO1xyXG5pbXBvcnQgU3RlYWx0aFBsdWdpbiBmcm9tICdwdXBwZXRlZXItZXh0cmEtcGx1Z2luLXN0ZWFsdGgnO1xyXG5pbXBvcnQgeyBleGVjdXRhYmxlUGF0aCB9IGZyb20gJ3B1cHBldGVlcic7XHJcblxyXG5wdXBwZXRlZXIudXNlKFN0ZWFsdGhQbHVnaW4oKSk7XHJcblxyXG5hc3luYyBmdW5jdGlvbiBzZXR1cEJyb3dzZXIoKSB7XHJcbiAgcmV0dXJuIGF3YWl0IHB1cHBldGVlci5sYXVuY2goe1xyXG4gICAgaGVhZGxlc3M6IGZhbHNlLFxyXG4gICAgZXhlY3V0YWJsZVBhdGg6IGV4ZWN1dGFibGVQYXRoKCksXHJcbiAgICBhcmdzOiBbXHJcbiAgICAgICctLW5vLXNhbmRib3gnLFxyXG4gICAgICAnLS1kaXNhYmxlLXNldHVpZC1zYW5kYm94JyxcclxuICAgICAgJy0tZGlzYWJsZS1ibGluay1mZWF0dXJlcz1BdXRvbWF0aW9uQ29udHJvbGxlZCcsXHJcbiAgICAgICctLXdpbmRvdy1zaXplPTE5MjAsMTA4MCcsXHJcbiAgICAgICctLWRpc2FibGUtZmVhdHVyZXM9c2l0ZS1wZXItcHJvY2VzcycsXHJcbiAgICAgICctLWRpc2FibGUtd2ViLXNlY3VyaXR5J1xyXG4gICAgXSxcclxuICAgIGRlZmF1bHRWaWV3cG9ydDogeyB3aWR0aDogMTkyMCwgaGVpZ2h0OiAxMDgwIH1cclxuICB9KTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gc2V0dXBQYWdlKGJyb3dzZXIpIHtcclxuICBjb25zdCBwYWdlID0gYXdhaXQgYnJvd3Nlci5uZXdQYWdlKCk7XHJcbiAgXHJcbiAgYXdhaXQgcGFnZS5zZXRFeHRyYUhUVFBIZWFkZXJzKHtcclxuICAgICdBY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44JyxcclxuICAgICdBY2NlcHQtTGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLFxyXG4gICAgJ0FjY2VwdC1FbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlLCBicicsXHJcbiAgICAnQ29ubmVjdGlvbic6ICdrZWVwLWFsaXZlJ1xyXG4gIH0pO1xyXG5cclxuICBhd2FpdCBwYWdlLnNldFVzZXJBZ2VudCgnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyMC4wLjAuMCBTYWZhcmkvNTM3LjM2Jyk7XHJcblxyXG4gIHJldHVybiBwYWdlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmb3JtYXRQcmljZShwcmljZSkge1xyXG4gIGlmICh0eXBlb2YgcHJpY2UgPT09ICdzdHJpbmcnKSB7XHJcbiAgICByZXR1cm4gcGFyc2VGbG9hdChwcmljZS5yZXBsYWNlKC9bXjAtOS5dL2csICcnKSk7XHJcbiAgfVxyXG4gIHJldHVybiBwcmljZTtcclxufVxyXG5cclxuZXhwb3J0IHtcclxuICBzZXR1cEJyb3dzZXIsXHJcbiAgc2V0dXBQYWdlLFxyXG4gIGZvcm1hdFByaWNlXHJcbn07Il0sIm5hbWVzIjpbInB1cHBldGVlciIsIlN0ZWFsdGhQbHVnaW4iLCJleGVjdXRhYmxlUGF0aCIsInVzZSIsInNldHVwQnJvd3NlciIsImxhdW5jaCIsImhlYWRsZXNzIiwiYXJncyIsImRlZmF1bHRWaWV3cG9ydCIsIndpZHRoIiwiaGVpZ2h0Iiwic2V0dXBQYWdlIiwiYnJvd3NlciIsInBhZ2UiLCJuZXdQYWdlIiwic2V0RXh0cmFIVFRQSGVhZGVycyIsInNldFVzZXJBZ2VudCIsImZvcm1hdFByaWNlIiwicHJpY2UiLCJwYXJzZUZsb2F0IiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/utils.js\n");

/***/ }),

/***/ "(api)/./src/vivid-seats.js":
/*!****************************!*\
  !*** ./src/vivid-seats.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_config_env__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/src/config/env */ \"(api)/./src/config/env.ts\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(api)/./src/utils.js\");\n/* harmony import */ var _barrel_optimize_names_parse_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=parse!=!date-fns */ \"(api)/__barrel_optimize__?names=parse!=!./node_modules/date-fns/index.js\");\n\n\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(_src_config_env__WEBPACK_IMPORTED_MODULE_1__.config.supabase.url, _src_config_env__WEBPACK_IMPORTED_MODULE_1__.config.supabase.serviceKey);\n// Function to check if an event exists\nasync function eventExists(name, date) {\n    const { data, error } = await supabase.from(\"events\").select(\"id\").eq(\"name\", name).eq(\"date\", date).single();\n    if (error && error.code !== \"PGRST116\") {\n        console.error(\"Error checking event existence:\", error);\n        return false;\n    }\n    return data ? true : false;\n}\n// Function to check if a link exists\nasync function linkExists(eventId, source) {\n    const { data, error } = await supabase.from(\"event_links\").select(\"id\").eq(\"event_id\", eventId).eq(\"source\", source).single();\n    if (error && error.code !== \"PGRST116\") {\n        console.error(\"Error checking link existence:\", error);\n        return false;\n    }\n    return data ? true : false;\n}\n// Function to insert an event\nasync function insertEvent(event) {\n    const parsedDate = (0,_barrel_optimize_names_parse_date_fns__WEBPACK_IMPORTED_MODULE_3__.parse)(event.date, \"MMM d yyyy h:mm a\", new Date());\n    console.log(`Parsed Date Object: ${parsedDate} | Timestamp: ${parsedDate.getTime()}`);\n    if (isNaN(parsedDate)) {\n        console.error(\"Invalid Date object:\", event.date);\n        return null;\n    }\n    // Check if the event already exists\n    const exists = await eventExists(event.title, parsedDate.toISOString());\n    if (exists) {\n        console.log(`Event \"${event.title}\" on ${parsedDate.toISOString()} already exists. Skipping insertion.`);\n        return null;\n    }\n    const eventData = {\n        name: event.title,\n        type: event.type || \"Concert\",\n        category: event.category || \"Unknown\",\n        date: parsedDate.toISOString(),\n        venue: event.venue\n    };\n    console.log(\"Attempting to insert event:\", eventData);\n    const { data, error } = await supabase.from(\"events\").insert([\n        eventData\n    ]).select(\"id\");\n    if (error) {\n        console.error(\"Error inserting event:\", error);\n        console.error(\"Error details:\", {\n            code: error.code,\n            message: error.message,\n            details: error.details,\n            hint: error.hint\n        });\n        return null;\n    }\n    console.log(\"Successfully inserted event:\", data[0].id);\n    return data[0].id;\n}\n// Function to insert event links\nasync function insertEventLink(eventId, source, url) {\n    // Check if the link already exists to prevent duplicates\n    const exists = await linkExists(eventId, source);\n    if (exists) {\n        console.log(`Event link from ${source} already exists for event ID ${eventId}. Skipping insertion.`);\n        return;\n    }\n    const linkData = {\n        event_id: eventId,\n        source: source,\n        url: url\n    };\n    const { data, error } = await supabase.from(\"event_links\").insert([\n        linkData\n    ]);\n    if (error) {\n        console.error(`Error inserting event link (${source}):`, error);\n    } else {\n        console.log(`Inserted event link (${source}):`, data[0].id);\n    }\n}\n// Function to insert tickets\nasync function insertTickets(eventId, tickets) {\n    const formattedTickets = tickets.sections.flatMap((section)=>section.tickets.map((ticket)=>({\n                event_id: eventId,\n                price: ticket.rawPrice,\n                type: section.category,\n                section: section.section,\n                row: ticket.row || null,\n                quantity: parseInt(ticket.quantity, 10) || 1,\n                source: \"vividseats\",\n                url: ticket.listingUrl,\n                raw_data: ticket\n            })));\n    const { data, error } = await supabase.from(\"tickets\").insert(formattedTickets);\n    if (error) {\n        console.error(\"Error inserting tickets:\", error);\n    } else {\n        console.log(\"Inserted tickets:\", data.length);\n    }\n}\nasync function mainSearch(artist, venue, location) {\n    const searcher = new VividSeatsSearcher();\n    const concertsWithPrices = await searcher.searchConcerts(artist, venue, location);\n    for (const concert of concertsWithPrices){\n        const eventId = await insertEvent(concert);\n        if (eventId) {\n            // Insert event links into event_links table\n            await insertEventLink(eventId, \"vividseats\", concert.link);\n            // Insert tickets into tickets table\n            if (concert.tickets) {\n                await insertTickets(eventId, concert.tickets);\n            }\n        }\n    }\n}\n// Call mainSearch with your parameters\n// mainSearch('Cake', 'Salt Shed', 'Chicago');\nclass VividSeatsSearcher {\n    constructor(){\n        this.baseUrl = \"https://www.vividseats.com/search\";\n    }\n    generateSearchUrl(artist, venue, location) {\n        const searchParams = new URLSearchParams();\n        let searchTerms = [];\n        if (artist) searchTerms.push(artist);\n        if (location) searchTerms.push(location);\n        searchParams.append(\"searchTerm\", searchTerms.join(\" \"));\n        return `${this.baseUrl}?${searchParams.toString()}`;\n    }\n    // ... existing methods including getTicketPrices and searchConcerts ...\n    async searchConcerts(artist, venue, location) {\n        const browser = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupBrowser)();\n        let searchPage;\n        try {\n            searchPage = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupPage)(browser);\n            const searchUrl = this.generateSearchUrl(artist, venue, location);\n            console.log(\"Searching VividSeats:\", searchUrl);\n            await searchPage.goto(searchUrl, {\n                waitUntil: \"networkidle0\",\n                timeout: 30000\n            });\n            // Wait for either productions list to appear\n            await searchPage.waitForSelector('[data-testid=\"productions-list\"]', {\n                timeout: 10000\n            });\n            const concerts = await searchPage.evaluate(({ artist, location, venue })=>{\n                // Get all production listings from both \"Upcoming Events\" and \"All Locations\" sections\n                const productionLists = Array.from(document.querySelectorAll('[data-testid=\"productions-list\"]'));\n                const allEvents = [];\n                productionLists.forEach((list)=>{\n                    // First, get all production listings\n                    const listings = Array.from(list.querySelectorAll('[data-testid^=\"production-listing-\"]'));\n                    console.log(`Found ${listings.length} listings`);\n                    listings.forEach((listing)=>{\n                        try {\n                            // Get the anchor element and check if it exists and has href\n                            const anchor = listing.querySelector(\"a\");\n                            if (!anchor || !anchor.href) {\n                                console.log(\"Skipping listing - no valid link found\");\n                                return;\n                            }\n                            // Skip parking listings\n                            if (anchor.href.toLowerCase().includes(\"parking\")) {\n                                console.log(\"Skipping parking listing\");\n                                return;\n                            }\n                            // Get date components with null checks\n                            const dateElement = listing.querySelector('[data-testid=\"date-time-left-element\"]');\n                            if (!dateElement) {\n                                console.log(\"Skipping listing - no date element found\");\n                                return;\n                            }\n                            const dayOfWeek = dateElement.querySelector(\".MuiTypography-overline\")?.textContent?.trim() || \"\";\n                            const date = dateElement.querySelector(\".MuiTypography-small-bold\")?.textContent?.trim() || \"\";\n                            const year = dateElement.querySelector(\".MuiTypography-small-bold:last-of-type\")?.textContent?.trim() || \"\";\n                            const time = dateElement.querySelector(\".MuiTypography-caption\")?.textContent?.trim() || \"\";\n                            // Get title with null check\n                            const titleElement = listing.querySelector(\".styles_titleTruncate__XiZ53\");\n                            if (!titleElement) {\n                                console.log(\"Skipping listing - no title element found\");\n                                return;\n                            }\n                            const title = titleElement.textContent.trim();\n                            // Find venue and location using the styles_labelContainer__ wildcard\n                            const labelContainer = listing.querySelector('[class^=\"styles_labelContainer__\"]');\n                            if (!labelContainer) {\n                                console.log(\"Skipping listing - no label container found\");\n                                return;\n                            }\n                            // Get all text truncate spans within the label container\n                            const truncateSpans = Array.from(labelContainer.querySelectorAll(\".styles_textTruncate__wsM3Q\"));\n                            if (truncateSpans.length < 2) {\n                                console.log(\"Skipping listing - incomplete venue/location info\");\n                                return;\n                            }\n                            // First span is venue, last span is location\n                            const venue = truncateSpans[0].textContent.trim();\n                            const eventLocation = truncateSpans[truncateSpans.length - 1].textContent.trim();\n                            // Only add event if we have all required fields\n                            if (title && date && venue && eventLocation && anchor.href) {\n                                console.log(`Found valid event: ${title} at ${venue}`);\n                                allEvents.push({\n                                    title,\n                                    date: `${date} ${dayOfWeek} ${time}`,\n                                    venue,\n                                    location: eventLocation,\n                                    link: anchor.href,\n                                    source: \"vividseats\",\n                                    rawData: {\n                                        dayOfWeek,\n                                        date,\n                                        year,\n                                        time,\n                                        fullTitle: title\n                                    }\n                                });\n                            }\n                        } catch (err) {\n                            console.log(\"Error parsing event:\", err);\n                        }\n                    });\n                });\n                // Score and sort events by relevance\n                return allEvents.map((event)=>{\n                    let score = 0;\n                    // Exact title match\n                    if (event.title.toLowerCase() === artist.toLowerCase()) score += 100;\n                    else if (event.title.toLowerCase().includes(artist.toLowerCase())) score += 50;\n                    // Location match\n                    if (event.location.toLowerCase().includes(location.toLowerCase())) score += 30;\n                    // Venue match (if provided)\n                    if (venue && event.venue.toLowerCase().includes(venue.toLowerCase())) score += 20;\n                    return {\n                        ...event,\n                        matchScore: score\n                    };\n                }).sort((a, b)=>b.matchScore - a.matchScore);\n            }, {\n                artist,\n                location,\n                venue\n            });\n            console.log(`Found ${concerts.length} matching VividSeats event(s)`);\n            // Get tickets for the best matching event(s)\n            const bestMatches = concerts.filter((event)=>event.matchScore >= 50);\n            const concertsWithPrices = [];\n            // Process each event only once\n            const processedUrls = new Set();\n            for (const concert of bestMatches){\n                // Skip if we've already processed this URL\n                if (processedUrls.has(concert.link)) {\n                    continue;\n                }\n                console.log(`Processing event: \"${concert.title}\" (match score: ${concert.matchScore})`);\n                // Use the existing page to navigate to the event\n                await searchPage.goto(concert.link, {\n                    waitUntil: \"networkidle0\",\n                    timeout: 30000\n                });\n                // Extract tickets directly from the loaded page\n                const tickets = await searchPage.evaluate(()=>{\n                    const groupListings = Array.from(document.querySelectorAll('[data-testid=\"listing-group-row-container\"]'));\n                    const individualListings = Array.from(document.querySelectorAll('[data-testid=\"listing-row-container\"]'));\n                    console.log(`Found ${groupListings.length} group listings and ${individualListings.length} individual listings`);\n                    const allListings = [\n                        ...groupListings,\n                        ...individualListings\n                    ];\n                    const normalizeSection = (section)=>{\n                        if (!section) return \"UNKNOWN\";\n                        const sectionUpper = section.toUpperCase();\n                        const categories = {\n                            \"GENERAL ADMISSION\": [\n                                \"GA\",\n                                \"GEN\",\n                                \"GENADM\"\n                            ],\n                            \"GRANDSTAND\": [\n                                \"GRAND\",\n                                \"GSADA\",\n                                \"GS\"\n                            ],\n                            \"PREMIUM\": [\n                                \"PREM\",\n                                \"PRM\"\n                            ],\n                            \"VIP\": [\n                                \"VIP\"\n                            ],\n                            \"BALCONY\": [\n                                \"BAL\",\n                                \"BALC\"\n                            ],\n                            \"FLOOR\": [\n                                \"FLR\",\n                                \"FLOOR\"\n                            ],\n                            \"STANDING\": [\n                                \"STAND\"\n                            ]\n                        };\n                        for (const [category, keywords] of Object.entries(categories)){\n                            if (keywords.some((keyword)=>sectionUpper.includes(keyword))) {\n                                return category;\n                            }\n                        }\n                        return `UNCATEGORIZED: ${section}`;\n                    };\n                    const ticketsBySection = {};\n                    allListings.forEach((listing, index)=>{\n                        try {\n                            const section = listing.querySelector('[data-testid^=\"GRANDS\"], [data-testid^=\"GSADA\"], [data-testid^=\"PREM\"], [data-testid^=\"GENADM\"], .MuiTypography-small-medium')?.textContent?.trim() || \"\";\n                            const quantity = listing.querySelector(\".MuiTypography-caption-regular\")?.textContent?.trim() || \"\";\n                            const price = listing.querySelector('[data-testid=\"listing-price\"]')?.textContent?.trim() || \"\";\n                            const row = listing.querySelector('[data-testid=\"row\"]')?.textContent?.trim();\n                            const dealScore = listing.querySelector('[data-testid=\"deal-score\"], .styles_greatestScoreLabel__Kq4O3')?.textContent?.trim() || \"\";\n                            const listingId = listing.getAttribute(\"data-listing-id\");\n                            const normalizedSection = normalizeSection(section);\n                            if (!ticketsBySection[normalizedSection]) {\n                                ticketsBySection[normalizedSection] = {\n                                    section: normalizedSection,\n                                    originalSection: section,\n                                    category: normalizedSection.startsWith(\"UNCATEGORIZED\") ? \"UNKNOWN\" : normalizedSection,\n                                    tickets: []\n                                };\n                            }\n                            if (price && section) {\n                                ticketsBySection[normalizedSection].tickets.push({\n                                    quantity,\n                                    price,\n                                    dealScore,\n                                    rawPrice: parseFloat(price.replace(/[^0-9.]/g, \"\")),\n                                    row: row || null,\n                                    listingId,\n                                    originalSection: section,\n                                    listingUrl: window.location.href\n                                });\n                            }\n                        } catch (err) {\n                            console.log(`Error processing listing ${index + 1}:`, err);\n                        }\n                    });\n                    Object.values(ticketsBySection).forEach((section)=>{\n                        section.tickets.sort((a, b)=>a.rawPrice - b.rawPrice);\n                        section.lowestPrice = section.tickets[0]?.rawPrice || null;\n                        section.highestPrice = section.tickets[section.tickets.length - 1]?.rawPrice || null;\n                        section.numberOfListings = section.tickets.length;\n                    });\n                    return {\n                        totalSections: Object.keys(ticketsBySection).length,\n                        sections: Object.values(ticketsBySection).sort((a, b)=>a.lowestPrice - b.lowestPrice)\n                    };\n                });\n                if (tickets && tickets.totalSections > 0) {\n                    console.log(`Found tickets in ${tickets.totalSections} sections`);\n                    concertsWithPrices.push({\n                        ...concert,\n                        tickets\n                    });\n                }\n                // Mark this URL as processed\n                processedUrls.add(concert.link);\n            }\n            return concertsWithPrices;\n        } catch (error) {\n            console.error(\"VividSeats error details:\", error);\n            if (searchPage) {\n                await searchPage.screenshot({\n                    path: \"vividseats-error.png\",\n                    fullPage: true\n                });\n            }\n            return [];\n        } finally{\n            if (browser) {\n                await browser.close();\n            }\n        }\n    }\n    async getTicketPrices(eventUrl, existingPage = null) {\n        let browser = null;\n        let page = existingPage;\n        try {\n            if (!existingPage) {\n                browser = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupBrowser)();\n                page = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.setupPage)(browser);\n                console.log(\"Navigating to event page:\", eventUrl);\n            }\n            // Function to check for content\n            const checkContent = async ()=>{\n                try {\n                    const content = await page.evaluate(()=>{\n                        const selectors = [\n                            \".styles_listingRowContainer__KNM4_\",\n                            \".styles_listingRowContainer__d8WLZ\",\n                            '[data-testid=\"listing-group-row-container\"]',\n                            '[data-testid=\"listing-row-container\"]'\n                        ];\n                        for (const selector of selectors){\n                            if (document.querySelector(selector)) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    });\n                    return content;\n                } catch (error) {\n                    console.log(\"Error checking content:\", error);\n                    return false;\n                }\n            };\n            // Initial navigation\n            try {\n                await page.goto(eventUrl, {\n                    waitUntil: \"domcontentloaded\",\n                    timeout: 30000\n                });\n                await page.waitForTimeout(2000);\n            } catch (error) {\n                console.log(\"Initial navigation error:\", error);\n            }\n            // Check for content\n            let contentFound = await checkContent();\n            let attempts = 1;\n            const maxAttempts = 3;\n            while(!contentFound && attempts < maxAttempts){\n                console.log(`Content check attempt ${attempts} of ${maxAttempts}`);\n                try {\n                    await page.reload({\n                        waitUntil: \"domcontentloaded\"\n                    });\n                    await page.waitForTimeout(2000);\n                    contentFound = await checkContent();\n                    if (contentFound) {\n                        console.log(\"Found content on attempt\", attempts);\n                        break;\n                    }\n                } catch (error) {\n                    console.log(`Error on attempt ${attempts}:`, error);\n                }\n                attempts++;\n            }\n            if (!contentFound) {\n                throw new Error(\"Could not find content after multiple attempts\");\n            }\n            // Extract tickets only if content was found\n            const tickets = await page.evaluate(()=>{\n                const groupListings = Array.from(document.querySelectorAll('[data-testid=\"listing-group-row-container\"]'));\n                const individualListings = Array.from(document.querySelectorAll('[data-testid=\"listing-row-container\"]'));\n                console.log(`Found ${groupListings.length} group listings and ${individualListings.length} individual listings`);\n                const allListings = [\n                    ...groupListings,\n                    ...individualListings\n                ];\n                const normalizeSection = (section)=>{\n                    if (!section) return \"UNKNOWN\";\n                    const sectionUpper = section.toUpperCase();\n                    const categories = {\n                        \"GENERAL ADMISSION\": [\n                            \"GA\",\n                            \"GEN\",\n                            \"GENADM\"\n                        ],\n                        \"GRANDSTAND\": [\n                            \"GRAND\",\n                            \"GSADA\",\n                            \"GS\"\n                        ],\n                        \"PREMIUM\": [\n                            \"PREM\",\n                            \"PRM\"\n                        ],\n                        \"VIP\": [\n                            \"VIP\"\n                        ],\n                        \"BALCONY\": [\n                            \"BAL\",\n                            \"BALC\"\n                        ],\n                        \"FLOOR\": [\n                            \"FLR\",\n                            \"FLOOR\"\n                        ],\n                        \"STANDING\": [\n                            \"STAND\"\n                        ]\n                    };\n                    for (const [category, keywords] of Object.entries(categories)){\n                        if (keywords.some((keyword)=>sectionUpper.includes(keyword))) {\n                            return category;\n                        }\n                    }\n                    return `UNCATEGORIZED: ${section}`;\n                };\n                const ticketsBySection = {};\n                allListings.forEach((listing, index)=>{\n                    try {\n                        const section = listing.querySelector('[data-testid^=\"GRANDS\"], [data-testid^=\"GSADA\"], [data-testid^=\"PREM\"], [data-testid^=\"GENADM\"], .MuiTypography-small-medium')?.textContent?.trim() || \"\";\n                        const quantity = listing.querySelector(\".MuiTypography-caption-regular\")?.textContent?.trim() || \"\";\n                        const price = listing.querySelector('[data-testid=\"listing-price\"]')?.textContent?.trim() || \"\";\n                        const row = listing.querySelector('[data-testid=\"row\"]')?.textContent?.trim();\n                        const dealScore = listing.querySelector('[data-testid=\"deal-score\"], .styles_greatestScoreLabel__Kq4O3')?.textContent?.trim() || \"\";\n                        const listingId = listing.getAttribute(\"data-listing-id\");\n                        const normalizedSection = normalizeSection(section);\n                        if (!ticketsBySection[normalizedSection]) {\n                            ticketsBySection[normalizedSection] = {\n                                section: normalizedSection,\n                                originalSection: section,\n                                category: normalizedSection.startsWith(\"UNCATEGORIZED\") ? \"UNKNOWN\" : normalizedSection,\n                                tickets: []\n                            };\n                        }\n                        if (price && section) {\n                            ticketsBySection[normalizedSection].tickets.push({\n                                quantity,\n                                price,\n                                dealScore,\n                                rawPrice: parseFloat(price.replace(/[^0-9.]/g, \"\")),\n                                row: row || null,\n                                listingId,\n                                originalSection: section,\n                                listingUrl: window.location.href\n                            });\n                        }\n                    } catch (err) {\n                        console.log(`Error processing listing ${index + 1}:`, err);\n                    }\n                });\n                Object.values(ticketsBySection).forEach((section)=>{\n                    section.tickets.sort((a, b)=>a.rawPrice - b.rawPrice);\n                    section.lowestPrice = section.tickets[0]?.rawPrice || null;\n                    section.highestPrice = section.tickets[section.tickets.length - 1]?.rawPrice || null;\n                    section.numberOfListings = section.tickets.length;\n                });\n                return {\n                    totalSections: Object.keys(ticketsBySection).length,\n                    sections: Object.values(ticketsBySection).sort((a, b)=>a.lowestPrice - b.lowestPrice)\n                };\n            });\n            console.log(`Found tickets in ${tickets.totalSections} sections`);\n            return tickets;\n        } catch (error) {\n            console.error(\"Error fetching ticket prices:\", error);\n            return {\n                totalSections: 0,\n                sections: []\n            };\n        } finally{\n            if (browser && !existingPage) {\n                try {\n                    await browser.close();\n                } catch (error) {\n                    console.log(\"Error closing browser:\", error);\n                }\n            }\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (VividSeatsSearcher);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/vivid-seats.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/date-fns"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fevents%2Fsearch&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cevents%5Csearch.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();